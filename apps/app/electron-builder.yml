appId: com.electron.app
productName: rapid
directories:
  buildResources: builder
  output: ../../dist/app/
files:
  - 'out/**'
  - 'resources/**'
asarUnpack:
  - resources/**
afterSign: builder/notarize.js
win:
  executableName: rapid
nsis:
  oneClick: false # 是创建一键式安装程序还是辅助安装程序。
  perMachine: true # 是否为辅助安装程序显示安装模式安装程序页面（选择每台计算机或每个用户
  allowElevation: true # 允许请求提升。
  allowToChangeInstallationDirectory: true # 允许修改安装目录
  removeDefaultUninstallWelcomePage: false # 删除默认的“卸载欢迎”页面。
  installerIcon: 'builder/icon.ico' # 安装图标
  uninstallerIcon: 'builder/icon.ico' # 卸载图标
  createDesktopShortcut: true # 创建桌面快捷方式
  createStartMenuShortcut: true # 创建开始菜单图标
  runAfterFinish: true # 安装完后是否运行项目
  artifactName: ${name}-${version}-setup.${ext}
  shortcutName: 'Rapid'
  uninstallDisplayName: ${productName}
  packElevateHelper: true # 是否打包 elevate 可执行文件（如果使用或将来可以使用每台计算机安装程序，则 electron-updater 需要）
mac:
  entitlementsInherit: builder/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
dmg:
  artifactName: ${name}-${version}.${ext}
linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}.${ext}
npmRebuild: false
publish:
  provider: generic
  url: https://example.com/auto-updates
